# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: argocd-repo-server
# automountServiceAccountToken: true

# ---

# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: argocd-cm
#   labels:
#       app.kubernetes.io/name: argocd-cm
#       app.kubernetes.io/part-of: argocd
# data:
#   configManagementPlugins: |
#     - name: argocd-vault-plugin-helm
#       init:
#         command: [sh, -c]
#         args: ["helm dependency build"]
#       generate:
#         command: ["sh", "-c"]
#         args: ["helm template $ARGOCD_APP_NAME . --include-crds | argocd-vault-plugin generate -"]

# ---

# apiVersion: argoproj.io/v1alpha1
# kind: ArgoCD
# metadata:
#   name: example-argocd
# spec:
#   repo:

#     serviceaccount: "argocd-repo-server"

#     # 1. Define an emptyDir volume which will hold the custom binaries
#     volumes:
#     - name: custom-tools
#       emptyDir: {}
#     # 2. Use an init container to download/copy custom binaries into the emptyDir
#     initContainers:
#     - name: download-tools
#       image: alpine:3.8
#       command: [sh, -c]

#       # Don't forget to update this to whatever the stable release version is
#       # Note the lack of the `v` prefix unlike the git tag
#       env:
#         - name: AVP_VERSION
#           value: "1.14.0"
#       args:
#         - >-
#           wget -O argocd-vault-plugin
#           https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v${AVP_VERSION}/argocd-vault-plugin_${AVP_VERSION}_linux_amd64 &&
#           chmod +x argocd-vault-plugin &&
#           mv argocd-vault-plugin /custom-tools/
#       volumeMounts:
#         - mountPath: /custom-tools
#           name: custom-tools
    
#     # 3. Volume mount the custom binary to the bin directory (overriding the existing version)
#     volumeMounts:
#     - name: custom-tools
#       mountPath: /usr/local/bin/argocd-vault-plugin
#       subPath: argocd-vault-plugin

#     env:   
#     - name: AVP_K8S_MOUNT_PATH
#       value: auth/sahab2/dev/security-operator-dev      
#     - name: AVP_K8S_ROLE
#       value: security-operator-dev  
#     - name: VAULT_ADDR
#       value: http://host.minikube.internal:8200 
#     - name: AVP_TYPE
#       value: vault  
#     - name: AVP_AUTH_TYPE
#       value: k8s  
#     - name: VAULT_SKIP_VERIFY
#       value: "1"  